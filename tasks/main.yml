---

#
# Setup

# Normalise the nms_config_dir var (Remove trailing slash)
- name: Update nms_config_dir
  set_fact:
    nms_config_dir: "{{ nms_config_dir | dirname }}"

#
# NMS user definitions

- name: NMS User
  user:
    state: present
    name: "{{ nms_user }}"
  register: nms_user_state

- name: NMS Group
  group:
    state: present
    name: "{{ nms_group }}"
  register: nms_group_state

- name: Record NMS IDs
  set_fact:
    nms_user_id: "{{ nms_user_state.uid }}"
    nms_group_id: "{{ nms_group_state.gid }}"

#
# NMS Data Directories

- name: NMS data directories
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ nms_user_id }}"
    group: "{{ nms_group_id }}"
    mode: "0770"
  loop:
    - "{{ nms_data_librenms_data }}"
    - "{{ nms_data_librenms_db }}"
    - "{{ nms_data_oxidized_data }}"

#
# Config files and dirs

- name: Config Dirs
  file:
    path: "{{ nms_config_dir }}/{{ item }}"
    state: directory
    mode: "0700"
  loop:
    - compose
    - config

- name: Copy compose files
  copy:
    src: compose/
    dest: "{{ nms_config_dir }}/compose"
    mode: "0600"

- name: Copy config templates
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ nms_config_dir }}/config/{{ item | basename | replace('.j2', '') }}"
    owner: "{{ nms_user_id }}"
    group: "{{ nms_group_id }}"
    mode: "0600"
  register: nms_config_files
  with_fileglob:
    - "templates/config/*.j2"

- name: Copy certificates
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: "{{ item.dest }}"
    owner: "{{ nms_user_id }}"
    group: "{{ nms_group_id }}"
    mode: "0600"
  no_log: true
  loop:
    - content: "{{ nms_certificate }}"
      dest: "{{ nms_config_dir }}/config/nms.crt"
    - content: "{{ nms_certificate_key }}"
      dest: "{{ nms_config_dir }}/config/nms.key"

#
# Build checksum dictionary

- name: Find config files
  ansible.builtin.find:
    file_type: file
    recurse: false
    get_checksum: true
    path: "{{ nms_config_dir }}/config/"
  register: nms_config_files_find

- name: Extract checksums
  loop: "{{ nms_config_files_find.files }}"
  set_fact:
    nms_config_files_checksums: >-
      {{ (nms_config_files_checksums | default([])) + [ { 'key': (item.path | basename), 'value': item.checksum } ] }}

- name: Checksum dictionary
  set_fact:
    nms_config_files_checksums: "{{ nms_config_files_checksums | items2dict }}"

#
# LibreNMS custom configuration validation

- block:
    - name: Validate additional config
      docker_container:
        name: "librenms_cfg_check_{{ ansible_date_time.epoch }}"
        image: php:latest
        detach: false
        # use the effective user id to make working with volume mounts and permissions easier
        user: "{{ ansible_effective_user_id }}"
        state: started
        cleanup: true
        entrypoint: "/usr/local/bin/php"
        command: "-l /config.php"
        volumes:
          - "{{ nms_config_dir }}/config/librenms_config.php:/config.php:ro"
      register: librenms_cfg_check
  always:
    - name: Validation output
      debug:
        msg: "{{ librenms_cfg_check.container.Output.split('\n') }}"

#
# Docker Compose config and deploy

- name: Copy compose definition
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ nms_config_dir }}/compose/docker-compose.yml"
    mode: "0600"

- name: Deploy LibreNMS
  docker_compose:
    project_src: "{{ nms_config_dir }}/compose"
    project_name: "{{ nms_deploy_name }}"
    build: true
