version: "3.9"

services:
  librenms_db:
    build:
      context: ./mariadb
    command:
      - "mysqld"
      - "--innodb-file-per-table=1"
      - "--lower-case-table-names=0"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
    volumes:
      - "{{ nms_data_librenms_db }}:/var/lib/mysql"
      - "{{ nms_config_dir }}/init_file:/etc/mysql/init_file"
    environment:
      - "TZ={{ nms_timezone }}"
      - "PUID={{ nms_user_id }}"
      - "PGID={{ nms_group_id }}"
      - "MYSQL_DATABASE={{ nms_librenms_mysql_database }}"
      - "MYSQL_USER={{ nms_librenms_mysql_user }}"
      - "MYSQL_PASSWORD={{ nms_librenms_mysql_password }}"
      - "MYSQL_ALLOW_EMPTY_PASSWORD=yes"
    deploy:
      restart_policy:
        condition: any
        delay: 10s
    user: "{{ nms_user_id }}"
    labels:
      nms.additional_config.init_file: "{{ nms_config_files_checksums['init_file'] }}"

  librenms_redis:
    build:
      context: ./redis
    environment:
      - "TZ={{ nms_timezone }}"
    deploy:
      restart_policy:
        condition: any
        delay: 10s

  librenms_main:
    build:
      context: ./librenms
    hostname: librenms
    cap_add:
      - NET_ADMIN
      - NET_RAW
    ports:
      - target: 8000
        published: {{ nms_librenms_http_port }}
        protocol: tcp
      - target: 8443
        published: {{ nms_librenms_https_port }}
        protocol: tcp
    depends_on:
      - librenms_db
      - librenms_redis
    volumes:
      - "{{ nms_data_librenms_data }}:/data"
      - "{{ nms_config_dir }}/config/librenms_config.php:/data/config/librenms_config.php"
      - "{{ nms_config_dir }}/config/librenms-http.conf:/etc/nginx/sites/librenms-http.conf"
      - "{{ nms_config_dir }}/config/librenms-https.conf:/etc/nginx/sites/librenms-https.conf"
      - "{{ nms_config_dir }}/config/nms.crt:/etc/nginx/librenms.crt"
      - "{{ nms_config_dir }}/config/nms.key:/etc/nginx/librenms.key"
    environment:
      - "TZ={{ nms_timezone }}"
      - "PUID={{ nms_user_id }}"
      - "PGID={{ nms_group_id }}"
      - "DB_HOST=librenms_db"
      - "DB_NAME={{ nms_librenms_mysql_database }}"
      - "DB_USER={{ nms_librenms_mysql_user }}"
      - "DB_PASSWORD={{ nms_librenms_mysql_password }}"
      - "DB_TIMEOUT=60"
{% if nms_librenms_app_url | default('') != '' %}
      - "APP_URL={{ nms_librenms_app_url }}"
      - "BASE_URL={{ nms_librenms_app_url }}"
{% endif %}
    labels:
      nms.additional_config.librenms_config_php: "{{ nms_config_files_checksums['librenms_config.php'] }}"
      nms.additional_config.librenms_http_conf: "{{ nms_config_files_checksums['librenms-http.conf'] }}"
      nms.additional_config.librenms_https_conf: "{{ nms_config_files_checksums['librenms-https.conf'] }}"
      nms.additional_config.nms_crt: "{{ nms_config_files_checksums['nms.crt'] }}"
      nms.additional_config.nms_key: "{{ nms_config_files_checksums['nms.key'] }}"
    deploy:
      restart_policy:
        condition: any
        delay: 10s

  librenms_dispatcher:
    build:
      context: ./librenms
    hostname: librenms-dispatcher
    cap_add:
      - NET_ADMIN
      - NET_RAW
    depends_on:
      - librenms_redis
    volumes:
      - "{{ nms_data_librenms_data }}:/data"
      - "{{ nms_config_dir }}/config/librenms_config.php:/data/config/librenms_config.php"
    environment:
      - "TZ={{ nms_timezone }}"
      - "PUID={{ nms_user_id }}"
      - "PGID={{ nms_group_id }}"
      - "DB_HOST=librenms_db"
      - "DB_NAME={{ nms_librenms_mysql_database }}"
      - "DB_USER={{ nms_librenms_mysql_user }}"
      - "DB_PASSWORD={{ nms_librenms_mysql_password }}"
      - "DB_TIMEOUT=60"
      - "DISPATCHER_NODE_ID=dispatcher1"
      - "SIDECAR_DISPATCHER=1"
      - "REDIS_HOST=librenms_redis"
{% if nms_librenms_app_url | default('') != '' %}
      - "APP_URL={{ nms_librenms_app_url }}"
      - "BASE_URL={{ nms_librenms_app_url }}"
{% endif %}
    labels:
      nms.additional_config.librenms_config_php: "{{ nms_config_files_checksums['librenms_config.php'] }}"
    deploy:
      restart_policy:
        condition: any
        delay: 10s

  oxidized:
    build:
      context: ./oxidized
    restart: always
    environment:
      - PUID={{ nms_user_id }}
      - PGID={{ nms_group_id }}
    volumes:
      - "{{ nms_data_oxidized_data }}:/work/data"
      - "{{ nms_config_dir }}/config/oxidized-config:/work/config"
    labels:
      nms.additional_config.oxidized-config: "{{ nms_config_files_checksums['oxidized-config'] }}"
